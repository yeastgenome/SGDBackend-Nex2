upstream frontend {
    server 127.0.0.1:6545;
}

upstream backend {
	server 127.0.0.1:6543;
}

log_format client_ip '$http_x_forwarded_for - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent"';

server {
    listen 8080;

    server_name _;

    include /etc/nginx/conf.d/proxies;
    
    port_in_redirect off;

    location /healthcheck {
        proxy_redirect off;
        proxy_next_upstream error;
        proxy_pass http://backend/healthcheck;
        break;
    }
    
    location /robots.txt {
        alias /var/www/html/robots.txt;
    }

    location / {
        access_log /var/log/nginx/sgd-frontend-access.log client_ip;
        error_log /var/log/nginx/sgd-frontend-error.log;

        add_header Strict-Transport-Security "max-age=120; includeSubDomains" always;

        proxy_set_header        Host $host:$server_port;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;

        client_max_body_size    10m;
        client_body_buffer_size 128k;
        proxy_connect_timeout   300s;
        proxy_send_timeout      300s;
        proxy_read_timeout      300s;
        proxy_buffering         off;
        proxy_temp_file_write_size 64k;
        proxy_pass http://frontend/;
        proxy_redirect          off;

        # force traffic from client to LB to use https
        if ($http_x_forwarded_proto != "https") {
                return 301 https://$host$request_uri;
        }

        # remove trailing slashes
        rewrite ^/(.*)/$ https://$host/$1 permanent;

        gzip            on;
        gzip_types    text/html text/plain application/javascript application/x-javascript text/javascript text/xml text/css application/json;
    }

    location /webservice/ {
        access_log /var/log/nginx/sgd-backend-access.log client_ip;
        error_log /var/log/nginx/sgd-backend-error.log;

        add_header Strict-Transport-Security "max-age=120; includeSubDomains" always;
        proxy_pass http://localhost:6543/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_connect_timeout   300s;
        proxy_send_timeout      300s;
        proxy_read_timeout      300s;

        set $test  "" ;

        # force traffic from client to LB to use https
        # unless connection is from localhost
        if ($http_x_forwarded_proto != "https") {
                set $test  "http" ;
        }

        if ($remote_addr != "127.0.0.1") {
                set $test  "${test}-not-local" ;
        }

        if ($test = "http-not-local") {
                return 301 https://$host$request_uri;
        }

        # remove trailing slashes
        rewrite ^/(.*)/$ https://$host/$1 permanent;

        gzip            on;
        gzip_types    text/html text/plain application/javascript application/x-javascript text/javascript text/xml text/css application/json;
    }
}
                 
